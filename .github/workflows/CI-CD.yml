name: CI/CD

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]

jobs:
  build-api:
    name: API Build-Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore "StreamTools API/StreamTools API.sln"
    - name: Build
      run: dotnet build "StreamTools API/StreamTools API.sln" --no-restore -warnaserror
  
  build-frontend:
    name: Fronend Build-Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: '18.18.x'
    - name: Install dependecies
      working-directory: ./Splatoon-WLRate
      run: npm i
    - name: Build
      working-directory: ./Splatoon-WLRate
      run: npm run build

  publish-api:
    if: endsWith(github.ref, 'main')
    needs: [build-api, build-frontend]
    runs-on: ubuntu-latest
    name: API Docker Publish
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Github Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:StreamTools API"
          push: true
          tags: ghcr.io/dustdevdm/streamtools-api:latest

  publish-frontend:
    if: endsWith(github.ref, 'main')
    needs: [build-api, build-frontend]
    runs-on: ubuntu-latest
    name: Frontend Docker Publish
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Github Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:Splatoon-WLRate"
          push: true
          tags: ghcr.io/dustdevdm/streamtools-frontend:latest

